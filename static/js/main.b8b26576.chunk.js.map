{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/actions.js","redux/contacts/types.js","redux/contacts/reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/selectors.js","components/FormContacts/FormContacts.js","components/Filter/Filter.js","components/ListContacts/ListContacts.js","App.js","index.js","components/FormContacts/FormContacts.module.css","components/ListContacts/ListContacts.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContact","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","styles","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","dispatch","useDispatch","useState","setName","setNumber","useSelector","handleChange","event","target","value","resetForm","Form","onSubmit","undefined","find","contact","preventDefault","alert","Label","Input","type","pattern","title","required","onChange","placeholder","mask","Button","Filter","length","ContactList","visibleContacts","List","map","Item","Text","Span","onClick","App","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,qNCGjBC,EAAaC,YCJC,gBDIyB,SAACC,EAAMC,GAAP,MAAmB,CACrEC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAISI,EAAgBN,YCXC,mBDYjBO,EAAgBP,YCXC,mBCExBQ,EAAQC,YAAc,IAAD,mBACxBV,GAAa,SAACW,EAAD,OAAUP,EAAV,EAAUA,QAAV,4BAA4BO,GAA5B,CAAmCP,OADxB,cAExBG,GAAgB,SAACI,EAAD,OAAUP,EAAV,EAAUA,QAAV,OACfO,EAAMC,QAAO,qBAAGP,KAAgBD,QAHT,IAMrBQ,EAASF,YAAc,GAAD,eACzBF,GAAgB,SAACK,EAAD,YAAMT,YAGVU,cAAgB,CAC7BL,QACAG,WCDIG,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUC,YAAeR,EAAuBS,IAElDpB,aACAqB,UAAUC,IAGCC,EAAYC,YAAaT,G,wBC3BvBU,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAOH,UAAvB,SAAmCC,K,yCCJ/BG,EAAc,SAAAjC,GAAK,OAAIA,EAAMsB,SAASxB,OACtCoC,EAAY,SAAAlC,GAAK,OAAIA,EAAMsB,SAASrB,QAEpCkC,EAAqB,SAAAnC,GAChC,IAAMsB,EAAWW,EAAYjC,GAEvBoC,EADSF,EAAUlC,GACOqC,cAEhC,OAAOf,EAASrB,QAAO,qBAAGV,KACnB8C,cAAcC,SAASF,OC+EjBG,MAjFf,WACE,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOnD,EAAP,KAAaoD,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOlD,EAAP,KAAeoD,EAAf,KAEMtB,EAAWuB,YAAYZ,GAEvBa,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBzD,EAAR,EAAQA,KAAM0D,EAAd,EAAcA,MAEd,OAAQ1D,GACN,IAAK,OACHoD,EAAQM,GACR,MAEF,IAAK,SACHL,EAAUK,GACV,MAEF,QACE,SAiBAC,EAAY,WAChBP,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMb,UAAWC,IAAOmB,KAAMC,SAnBX,SAAAL,QAILM,IAHA/B,EAASgC,MACrB,SAAAC,GAAO,OAAIA,EAAQhE,KAAK8C,gBAAkB9C,EAAK8C,kBAG/CU,EAAMS,iBACNhB,EAASnD,EAAWE,EAAMC,IAC1B0D,KAEAO,MAAM,GAAD,OAAIlE,EAAJ,mLAUP,UACE,wBAAOwC,UAAWC,IAAO0B,MAAzB,gCAEE,uBACE3B,UAAWC,IAAO2B,MAClBC,KAAK,OACLrE,KAAK,OACLsE,QAAQ,yHACRC,MAAM,wcACNC,UAAQ,EACRd,MAAO1D,EACPyE,SAAUlB,EACVmB,YAAY,yBAGhB,wBAAOlC,UAAWC,IAAO0B,MAAzB,2CAEE,cAAC,IAAD,CACE3B,UAAWC,IAAO2B,MAClBC,KAAK,MACLrE,KAAK,SACLsE,QAAQ,yFACRC,MAAM,wiBACNC,UAAQ,EACRC,SAAUlB,EACVG,MAAOzD,EACPyE,YAAY,sBACZC,KAAK,2BAIT,wBAAQnC,UAAWC,IAAOmC,OAAQP,KAAK,SAAvC,iG,iBCpDSQ,EAxBA,WACb,IAAM5B,EAAWC,cACXxC,EAAS4C,YAAYX,GAG3B,OAFiBW,YAAYZ,GAEfoC,OAGZ,wBAAOtC,UAAWC,IAAO0B,MAAzB,gKAEE,uBACEE,KAAK,OACLrE,KAAK,SACLwC,UAAWC,IAAO2B,MAClBV,MAAOhD,EACP+D,SAAU,SAAAjB,GAAK,OAAIP,EAAS3C,EAAckD,EAAMC,OAAOC,SACvDY,QAAQ,yHACRC,MAAM,wcACNC,UAAQ,OAZL,6U,gBCmBIO,EAzBK,WAClB,IAAM9B,EAAWC,cACX8B,EAAkB1B,YAAYV,GAEpC,OACE,oBAAIJ,UAAWC,IAAOwC,KAAtB,SACGD,EAAgBE,KAAI,gBAAG/E,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,qBAAIuC,UAAWC,IAAO0C,KAAtB,UACE,oBAAG3C,UAAWC,IAAO2C,KAArB,UACGpF,EADH,KACU,sBAAMwC,UAAWC,IAAO4C,KAAxB,SAA+BpF,OAEzC,wBACEuC,UAAWC,IAAOmC,OAClBP,KAAK,SACLiB,QAAS,kBAAMrC,EAAS5C,EAAcF,KACtCoE,MAAM,mDAJR,gEAJ+BpE,S,oBCS1BoF,MAbf,WACE,OACE,eAAC,EAAD,WACE,+IACA,cAAC,EAAD,IACA,kFACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,CAAgBC,UAAW,W,YCPjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU/D,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAagE,QAAS,KAAMxD,UAAWA,EAAvC,SACE,cAAC,EAAD,UAINyD,SAASC,eAAe,U,kBChB1BlG,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,MAAQ,4BAA4B,OAAS,+B,kBCArID,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,KAAO,2BAA2B,KAAO,2BAA2B,OAAS,gC","file":"static/js/main.b8b26576.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__3FoRN\",\"Input\":\"Filter_Input__20k7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","import { createAction } from '@reduxjs/toolkit';\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction(DELETE_CONTACT);\nexport const filterContact = createAction(FILTER_CONTACT);\n","export const ADD_CONTACT = 'contacts/add';\nexport const DELETE_CONTACT = 'contacts/delete';\nexport const FILTER_CONTACT = 'contacts/filter';\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContact } from './actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={styles.Container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/actions';\nimport styles from './FormContacts.module.css';\nimport InputMask from 'react-input-mask';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    const found = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (found === undefined) {\n      event.preventDefault();\n      dispatch(addContact(name, number));\n      resetForm();\n    } else {\n      alert(`${name} вже присутній у списку контактів`);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <label className={styles.Label}>\n        Ім'я\n        <input\n          className={styles.Input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Ім'я може складатись лише із букв, апострофа, тире та пробілів. Наприклад Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan і т.д.\"\n          required\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Sylvester Stalone\"\n        />\n      </label>\n      <label className={styles.Label}>\n        Номер\n        <InputMask\n          className={styles.Input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефону може складатись з цифр і може скаладтись з пробілів, тире, круглих дужок і може починатись з +\"\n          required\n          onChange={handleChange}\n          value={number}\n          placeholder=\"+38 (099) 999-99-99\"\n          mask=\"+38 (099) 999-99-99\"\n\n        />\n      </label>\n      <button className={styles.Button} type=\"submit\">\n        Додати контакт\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/actions';\nimport { getFilter, getContacts } from '../../redux/contacts/selectors';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  if (!contacts.length)\n    return <p>Ваша телефонна книга порожня. Будь ласка, додайте контакт. </p>;\n  return (\n    <label className={styles.Label}>\n      Знайдіть контакти за іменем\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={styles.Input}\n        value={filter}\n        onChange={event => dispatch(filterContact(event.target.value))}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Ім'я може складатись лише із букв, апострофа, тире та пробілів. Наприклад Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan і т.д.\"\n        required\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/actions';\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\nimport styles from './ListContacts.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  return (\n    <ul className={styles.List}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li className={styles.Item} key={id}>\n          <p className={styles.Text}>\n            {name}: <span className={styles.Span}>{number}</span>\n          </p>\n          <button\n            className={styles.Button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n            title=\"Видалити\"\n          >\n            Видалити\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import Container from './components/Container';\nimport ContactForm from './components/FormContacts';\nimport Filter from './components/Filter';\nimport ContactList from './components/ListContacts';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Телефонний довідник</h1>\n      <ContactForm />\n      <h2>Контакти</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer autoClose={3700} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"FormContacts_Form__1PDtW\",\"Label\":\"FormContacts_Label__13aMi\",\"Input\":\"FormContacts_Input__2v-lW\",\"Button\":\"FormContacts_Button__uqumT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ListContacts_List__2LALo\",\"Item\":\"ListContacts_Item__1md0j\",\"Text\":\"ListContacts_Text__3EW7Y\",\"Span\":\"ListContacts_Span__1L_ta\",\"Button\":\"ListContacts_Button__g8jEU\"};"],"sourceRoot":""}